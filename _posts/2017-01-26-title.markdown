---
layout: post
title:  vueJS 시작 하기 - 2 (feat, semver) 빌드 환경 분석
date:   2017-01-25 16:40:16
description: vueJS 시작 하기 - 2 sample 코드 기본 구조 파악 2
---

Git repository : <a href="https://github.com/arusantimo/arusantimo-vue-portfolio">arusantimo-vue-portfolio</a>

### 1-3 보충 dependency 확인 semver

vue 샘플 코드에서 모르는 dependency모듈이 있었습니다. semver라는 놈인데,
서버 구동시 버전 체크를 해주는 녀석이었습니다. <br>이 모듈을 이용해 서버 초기화 작업시 버전 체크하는 로직을 추가할 수 있다고 합니다.

깃 저장소에 저장되어 있는 프로젝트에서 다운받아 개발환경을 구성할때 버전 문제가 발생하는데, 문제인게 별다른 오류 메세지도 없고
원인을 잘 찾아내기 힘들게 됩니다. 그렇기 때문에 서버 구동 시 모듈 버전 체크로직을 넣어 두는게 좋다고 볼수 있습니다.

규모가 어느정도 되는 프로젝트의 경우 참여자 각자의 모듈 버전이나 환경이 다르기 때문에 이부분에서 오류가 나는 부분이 있었는데
이렇게 미리 체크로직을 구성하면 이런 사용자 간에 버전때문에 벌어지는 오류등을 막을 수 있을거라고 기대가 됩니다.

sample code in vueJS

```js
var semver = require('semver');
var chalk = require('chalk'); //오류 코드를 꾸미기 위해서 사용
var packageConfig = require('../package.json');
var exec = function (cmd) { //커멘더 라인을 사용하기 위해 호출
  return require('child_process').execSync(cmd).toString().trim();
}

var versionRequirements = [
  {
    name: 'node',
    currentVersion: semver.clean(process.version), //현재 사용자 node 버전 확인
    versionRequirement: packageConfig.engines.node, //다운 받은 프로젝트 요구 node 버전 확인
  },
  {
    name: 'npm',
    currentVersion: exec('npm --version'), //현재 사용자 npm 버전 확인
    versionRequirement: packageConfig.engines.npm, //다운받은 프로젝트 npm 요구 버전 확인
  }
]

module.exports = function () {
  var warnings = []
  for (var i = 0; i < versionRequirements.length; i++) { // 버전이 다른지 확인 하는 로직
    var mod = versionRequirements[i]
    if (!semver.satisfies(mod.currentVersion, mod.versionRequirement)) {
      warnings.push(mod.name + ': ' +
        chalk.red(mod.currentVersion) + ' should be ' +
        chalk.green(mod.versionRequirement)
      )
    }
  }

  if (warnings.length) { // 오류 코드를 나타내는 곳
    console.log('')
    console.log(chalk.yellow('To use this template, you must update following to modules:'))
    console.log()
    for (var i = 0; i < warnings.length; i++) {
      var warning = warnings[i]
      console.log('  ' + warning)
    }
    console.log()
    process.exit(1)
  }
}

```

### 1-4 dev-server 확인하기